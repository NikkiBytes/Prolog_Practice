% Generated by sql-metadata command in blipkit_sql
:- discontiguous relation/2.
:- discontiguous attribute/3.

unique(node,uid).
unique(node,node_id).
unique(link,link_id).


%% alias(?NODE_ID:int, ?SCOPE:string, ?TYPE_ID:int, ?LABEL:string) is nondet
% maps to sql table
relation(alias, 4).
attribute(1, alias, node_id, integer).
attribute(2, alias, scope, string).
attribute(3, alias, type_id, integer).
attribute(4, alias, label, string).
%% annotation_node(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:integer) is nondet
% maps to sql view
relation(annotation_node, 9).
attribute(1, annotation_node, node_id, integer).
attribute(2, annotation_node, uid, string).
attribute(3, annotation_node, label, string).
attribute(4, annotation_node, metatype, string).
attribute(5, annotation_node, is_anonymous, bool).
attribute(6, annotation_node, is_transitive, bool).
attribute(7, annotation_node, is_obsolete, bool).
attribute(8, annotation_node, is_reiflink, bool).
attribute(9, annotation_node, source_id, integer).
%% asserted_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(asserted_link, 7).
attribute(1, asserted_link, link_id, integer).
attribute(2, asserted_link, reiflink_node_id, integer).
attribute(3, asserted_link, node_id, integer).
attribute(4, asserted_link, predicate_id, integer).
attribute(5, asserted_link, object_id, integer).
attribute(6, asserted_link, is_inferred, bool).
attribute(7, asserted_link, combinator, string).
%% class_node(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:integer) is nondet
% maps to sql view
relation(class_node, 9).
attribute(1, class_node, node_id, integer).
attribute(2, class_node, uid, string).
attribute(3, class_node, label, string).
attribute(4, class_node, metatype, string).
attribute(5, class_node, is_anonymous, bool).
attribute(6, class_node, is_transitive, bool).
attribute(7, class_node, is_obsolete, bool).
attribute(8, class_node, is_reiflink, bool).
attribute(9, class_node, source_id, integer).
%% description(?DESCRIPTION_ID:int, ?NODE_ID:int, ?SCOPE:string, ?TYPE_ID:int, ?LABEL:string) is nondet
% maps to sql table
relation(description, 5).
attribute(1, description, description_id, integer).
attribute(2, description, node_id, integer).
attribute(3, description, scope, string).
attribute(4, description, type_id, integer).
attribute(5, description, label, string).
%% description_xref(?DESCRIPTION_ID:int, ?XREF_ID:int, ?CONTEXT_ID:integer) is nondet
% maps to sql table
relation(description_xref, 3).
attribute(1, description_xref, description_id, integer).
attribute(2, description_xref, xref_id, integer).
attribute(3, description_xref, context_id, integer).
%% differentium_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(differentium_link, 7).
attribute(1, differentium_link, link_id, integer).
attribute(2, differentium_link, reiflink_node_id, integer).
attribute(3, differentium_link, node_id, integer).
attribute(4, differentium_link, predicate_id, integer).
attribute(5, differentium_link, object_id, integer).
attribute(6, differentium_link, is_inferred, bool).
attribute(7, differentium_link, combinator, string).
%% genus_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(genus_link, 7).
attribute(1, genus_link, link_id, integer).
attribute(2, genus_link, reiflink_node_id, integer).
attribute(3, genus_link, node_id, integer).
attribute(4, genus_link, predicate_id, integer).
attribute(5, genus_link, object_id, integer).
attribute(6, genus_link, is_inferred, bool).
attribute(7, genus_link, combinator, string).
%% implied_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(implied_link, 7).
attribute(1, implied_link, link_id, integer).
attribute(2, implied_link, reiflink_node_id, integer).
attribute(3, implied_link, node_id, integer).
attribute(4, implied_link, predicate_id, integer).
attribute(5, implied_link, object_id, integer).
attribute(6, implied_link, is_inferred, bool).
attribute(7, implied_link, combinator, string).
%% implied_linkcount_by_source(?UID:string, ?LABEL:string, ?COUNT:int8) is nondet
% maps to sql view
relation(implied_linkcount_by_source, 3).
attribute(1, implied_linkcount_by_source, uid, string).
attribute(2, implied_linkcount_by_source, label, string).
attribute(3, implied_linkcount_by_source, count, int8).
%% instance_node(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:integer) is nondet
% maps to sql view
relation(instance_node, 9).
attribute(1, instance_node, node_id, integer).
attribute(2, instance_node, uid, string).
attribute(3, instance_node, label, string).
attribute(4, instance_node, metatype, string).
attribute(5, instance_node, is_anonymous, bool).
attribute(6, instance_node, is_transitive, bool).
attribute(7, instance_node, is_obsolete, bool).
attribute(8, instance_node, is_reiflink, bool).
attribute(9, instance_node, source_id, integer).
%% instance_of_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(instance_of_link, 7).
attribute(1, instance_of_link, link_id, integer).
attribute(2, instance_of_link, reiflink_node_id, integer).
attribute(3, instance_of_link, node_id, integer).
attribute(4, instance_of_link, predicate_id, integer).
attribute(5, instance_of_link, object_id, integer).
attribute(6, instance_of_link, is_inferred, bool).
attribute(7, instance_of_link, combinator, string).
%% internallinkpath(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?DISTANCE:int, ?SOURCE_ID:integer) is nondet
% maps to sql table
relation(internallinkpath, 5).
attribute(1, internallinkpath, node_id, integer).
attribute(2, internallinkpath, predicate_id, integer).
attribute(3, internallinkpath, object_id, integer).
attribute(4, internallinkpath, distance, integer).
attribute(5, internallinkpath, source_id, integer).
%% intersection_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(intersection_link, 7).
attribute(1, intersection_link, link_id, integer).
attribute(2, intersection_link, reiflink_node_id, integer).
attribute(3, intersection_link, node_id, integer).
attribute(4, intersection_link, predicate_id, integer).
attribute(5, intersection_link, object_id, integer).
attribute(6, intersection_link, is_inferred, bool).
attribute(7, intersection_link, combinator, string).
%% is_a(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:integer) is nondet
% maps to sql view
relation(is_a, 9).
attribute(1, is_a, node_id, integer).
attribute(2, is_a, uid, string).
attribute(3, is_a, label, string).
attribute(4, is_a, metatype, string).
attribute(5, is_a, is_anonymous, bool).
attribute(6, is_a, is_transitive, bool).
attribute(7, is_a, is_obsolete, bool).
attribute(8, is_a, is_reiflink, bool).
attribute(9, is_a, source_id, integer).
%% is_a_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(is_a_link, 7).
attribute(1, is_a_link, link_id, integer).
attribute(2, is_a_link, reiflink_node_id, integer).
attribute(3, is_a_link, node_id, integer).
attribute(4, is_a_link, predicate_id, integer).
attribute(5, is_a_link, object_id, integer).
attribute(6, is_a_link, is_inferred, bool).
attribute(7, is_a_link, combinator, string).
%% link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql table
relation(link, 9).
attribute(1, link, link_id, integer).
attribute(2, link, reiflink_node_id, integer).
attribute(3, link, node_id, integer).
attribute(4, link, predicate_id, integer).
attribute(5, link, object_id, integer).
attribute(6, link, is_inferred, bool).
attribute(7, link, combinator, string).
attribute(8, link, is_metadata, bool).
attribute(9, link, is_negated, bool).
%% link_audit(?LINK_ID:int, ?INFONODE_ID:int, ?LOADTIME:timestamp) is nondet
% maps to sql table
relation(link_audit, 3).
attribute(1, link_audit, link_id, integer).
attribute(2, link_audit, infonode_id, integer).
attribute(3, link_audit, loadtime, timestamp).
%% link_path(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?DISTANCE:int, ?SOURCE_ID:integer) is nondet
% maps to sql table
relation(link_path, 5).
attribute(1, link_path, node_id, integer).
attribute(2, link_path, predicate_id, integer).
attribute(3, link_path, object_id, integer).
attribute(4, link_path, distance, integer).
attribute(5, link_path, source_id, integer).
%% link_with_pred_uid(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string, ?PRED_UID:string) is nondet
% maps to sql view
relation(link_with_pred_uid, 8).
attribute(1, link_with_pred_uid, link_id, integer).
attribute(2, link_with_pred_uid, reiflink_node_id, integer).
attribute(3, link_with_pred_uid, node_id, integer).
attribute(4, link_with_pred_uid, predicate_id, integer).
attribute(5, link_with_pred_uid, object_id, integer).
attribute(6, link_with_pred_uid, is_inferred, bool).
attribute(7, link_with_pred_uid, combinator, string).
attribute(8, link_with_pred_uid, pred_uid, string).
%% linkcount_by_source(?UID:string, ?LABEL:string, ?COUNT:int8) is nondet
% maps to sql view
relation(linkcount_by_source, 3).
attribute(1, linkcount_by_source, uid, string).
attribute(2, linkcount_by_source, label, string).
attribute(3, linkcount_by_source, count, int8).
%% linkers(?SUBJECT_ID:int, ?PREDICATE_ID:int, ?PREDICATE:string, ?OBJECT_ID:integer) is nondet
% maps to sql view
relation(linkers, 4).
attribute(1, linkers, subject_id, integer).
attribute(2, linkers, predicate_id, integer).
attribute(3, linkers, predicate, string).
attribute(4, linkers, object_id, integer).
%% linkrule_isa1(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool) is nondet
% maps to sql view
relation(linkrule_isa1, 4).
attribute(1, linkrule_isa1, node_id, integer).
attribute(2, linkrule_isa1, predicate_id, integer).
attribute(3, linkrule_isa1, object_id, integer).
attribute(4, linkrule_isa1, is_inferred, bool).
%% linkrule_isa2(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool) is nondet
% maps to sql view
relation(linkrule_isa2, 4).
attribute(1, linkrule_isa2, node_id, integer).
attribute(2, linkrule_isa2, predicate_id, integer).
attribute(3, linkrule_isa2, object_id, integer).
attribute(4, linkrule_isa2, is_inferred, bool).
%% linkrule_isa2b(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool) is nondet
% maps to sql view
relation(linkrule_isa2b, 4).
attribute(1, linkrule_isa2b, node_id, integer).
attribute(2, linkrule_isa2b, predicate_id, integer).
attribute(3, linkrule_isa2b, object_id, integer).
attribute(4, linkrule_isa2b, is_inferred, bool).
%% linkrule_isa2c(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool) is nondet
% maps to sql view
relation(linkrule_isa2c, 4).
attribute(1, linkrule_isa2c, node_id, integer).
attribute(2, linkrule_isa2c, predicate_id, integer).
attribute(3, linkrule_isa2c, object_id, integer).
attribute(4, linkrule_isa2c, is_inferred, bool).
%% linkrule_transitivity(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool) is nondet
% maps to sql view
relation(linkrule_transitivity, 4).
attribute(1, linkrule_transitivity, node_id, integer).
attribute(2, linkrule_transitivity, predicate_id, integer).
attribute(3, linkrule_transitivity, object_id, integer).
attribute(4, linkrule_transitivity, is_inferred, bool).
%% linkrule_transitivity2(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool) is nondet
% maps to sql view
relation(linkrule_transitivity2, 4).
attribute(1, linkrule_transitivity2, node_id, integer).
attribute(2, linkrule_transitivity2, predicate_id, integer).
attribute(3, linkrule_transitivity2, object_id, integer).
attribute(4, linkrule_transitivity2, is_inferred, bool).
%% linkrule_transitivity2b(?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool) is nondet
% maps to sql view
relation(linkrule_transitivity2b, 4).
attribute(1, linkrule_transitivity2b, node_id, integer).
attribute(2, linkrule_transitivity2b, predicate_id, integer).
attribute(3, linkrule_transitivity2b, object_id, integer).
attribute(4, linkrule_transitivity2b, is_inferred, bool).
%% node(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:int, ?URI:string) is nondet
% maps to sql table
relation(node, 10).
attribute(1, node, node_id, integer).
attribute(2, node, uid, string).
attribute(3, node, label, string).
attribute(4, node, metatype, string).
attribute(5, node, is_anonymous, bool).
attribute(6, node, is_transitive, bool).
attribute(7, node, is_obsolete, bool).
attribute(8, node, is_reiflink, bool).
attribute(9, node, source_id, integer).
attribute(10, node, uri, string).
%% node_audit(?NODE_ID:int, ?INFONODE_ID:int, ?LOADTIME:timestamp) is nondet
% maps to sql table
relation(node_audit, 3).
attribute(1, node_audit, node_id, integer).
attribute(2, node_audit, infonode_id, integer).
attribute(3, node_audit, loadtime, timestamp).
%% node_j_source(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:int, ?SOURCE_LABEL:string, ?SOURCE_UID:string) is nondet
% maps to sql view
relation(node_j_source, 11).
attribute(1, node_j_source, node_id, integer).
attribute(2, node_j_source, uid, string).
attribute(3, node_j_source, label, string).
attribute(4, node_j_source, metatype, string).
attribute(5, node_j_source, is_anonymous, bool).
attribute(6, node_j_source, is_transitive, bool).
attribute(7, node_j_source, is_obsolete, bool).
attribute(8, node_j_source, is_reiflink, bool).
attribute(9, node_j_source, source_id, integer).
attribute(10, node_j_source, source_label, string).
attribute(11, node_j_source, source_uid, string).
%% node_xref(?NODE_ID:int, ?XREF_ID:int, ?CONTEXT_ID:integer) is nondet
% maps to sql table
relation(node_xref, 3).
attribute(1, node_xref, node_id, integer).
attribute(2, node_xref, xref_id, integer).
attribute(3, node_xref, context_id, integer).
%% nodecount_by_metatype_and_source(?METATYPE:string, ?UID:string, ?LABEL:string, ?COUNT:int8) is nondet
% maps to sql view
relation(nodecount_by_metatype_and_source, 4).
attribute(1, nodecount_by_metatype_and_source, metatype, string).
attribute(2, nodecount_by_metatype_and_source, uid, string).
attribute(3, nodecount_by_metatype_and_source, label, string).
attribute(4, nodecount_by_metatype_and_source, count, int8).
%% nodecount_by_source(?UID:string, ?LABEL:string, ?COUNT:int8) is nondet
% maps to sql view
relation(nodecount_by_source, 3).
attribute(1, nodecount_by_source, uid, string).
attribute(2, nodecount_by_source, label, string).
attribute(3, nodecount_by_source, count, int8).
%% posited_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string, ?ANNOTATION_NODE_ID:integer) is nondet
% maps to sql view
relation(posited_link, 8).
attribute(1, posited_link, link_id, integer).
attribute(2, posited_link, reiflink_node_id, integer).
attribute(3, posited_link, node_id, integer).
attribute(4, posited_link, predicate_id, integer).
attribute(5, posited_link, object_id, integer).
attribute(6, posited_link, is_inferred, bool).
attribute(7, posited_link, combinator, string).
attribute(8, posited_link, annotation_node_id, integer).
%% posits_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string, ?PRED_UID:string) is nondet
% maps to sql view
relation(posits_link, 8).
attribute(1, posits_link, link_id, integer).
attribute(2, posits_link, reiflink_node_id, integer).
attribute(3, posits_link, node_id, integer).
attribute(4, posits_link, predicate_id, integer).
attribute(5, posits_link, object_id, integer).
attribute(6, posits_link, is_inferred, bool).
attribute(7, posits_link, combinator, string).
attribute(8, posits_link, pred_uid, string).
%% reiflink(?LINK_ID:int, ?PREDICATE_ID:int, ?NODE_ID:int, ?COMBINATOR_ID:integer) is nondet
% maps to sql table
relation(reiflink, 4).
attribute(1, reiflink, link_id, integer).
attribute(2, reiflink, predicate_id, integer).
attribute(3, reiflink, node_id, integer).
attribute(4, reiflink, combinator_id, integer).
%% relation_node(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:integer) is nondet
% maps to sql view
relation(relation_node, 9).
attribute(1, relation_node, node_id, integer).
attribute(2, relation_node, uid, string).
attribute(3, relation_node, label, string).
attribute(4, relation_node, metatype, string).
attribute(5, relation_node, is_anonymous, bool).
attribute(6, relation_node, is_transitive, bool).
attribute(7, relation_node, is_obsolete, bool).
attribute(8, relation_node, is_reiflink, bool).
attribute(9, relation_node, source_id, integer).
%% statement_node(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:int, ?SUBJECT_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(statement_node, 14).
attribute(1, statement_node, node_id, integer).
attribute(2, statement_node, uid, string).
attribute(3, statement_node, label, string).
attribute(4, statement_node, metatype, string).
attribute(5, statement_node, is_anonymous, bool).
attribute(6, statement_node, is_transitive, bool).
attribute(7, statement_node, is_obsolete, bool).
attribute(8, statement_node, is_reiflink, bool).
attribute(9, statement_node, source_id, integer).
attribute(10, statement_node, subject_id, integer).
attribute(11, statement_node, predicate_id, integer).
attribute(12, statement_node, object_id, integer).
attribute(13, statement_node, is_inferred, bool).
attribute(14, statement_node, combinator, string).
%% statementcount_by_source(?UID:string, ?LABEL:string, ?COUNT:int8) is nondet
% maps to sql view
relation(statementcount_by_source, 3).
attribute(1, statementcount_by_source, uid, string).
attribute(2, statementcount_by_source, label, string).
attribute(3, statementcount_by_source, count, int8).
%% tagval(?NODE_ID:int, ?TAG_ID:int, ?VAL:string) is nondet
% maps to sql table
relation(tagval, 3).
attribute(1, tagval, node_id, integer).
attribute(2, tagval, tag_id, integer).
attribute(3, tagval, val, string).
%% transitive_relation_node(?NODE_ID:int, ?UID:string, ?LABEL:string, ?METATYPE:string, ?IS_ANONYMOUS:bool, ?IS_TRANSITIVE:bool, ?IS_OBSOLETE:bool, ?IS_REIFLINK:bool, ?SOURCE_ID:int, ?URI:string) is nondet
% maps to sql view
relation(transitive_relation_node, 10).
attribute(1, transitive_relation_node, node_id, integer).
attribute(2, transitive_relation_node, uid, string).
attribute(3, transitive_relation_node, label, string).
attribute(4, transitive_relation_node, metatype, string).
attribute(5, transitive_relation_node, is_anonymous, bool).
attribute(6, transitive_relation_node, is_transitive, bool).
attribute(7, transitive_relation_node, is_obsolete, bool).
attribute(8, transitive_relation_node, is_reiflink, bool).
attribute(9, transitive_relation_node, source_id, integer).
attribute(10, transitive_relation_node, uri, string).
%% union_link(?LINK_ID:int, ?REIFLINK_NODE_ID:int, ?NODE_ID:int, ?PREDICATE_ID:int, ?OBJECT_ID:int, ?IS_INFERRED:bool, ?COMBINATOR:string) is nondet
% maps to sql view
relation(union_link, 7).
attribute(1, union_link, link_id, integer).
attribute(2, union_link, reiflink_node_id, integer).
attribute(3, union_link, node_id, integer).
attribute(4, union_link, predicate_id, integer).
attribute(5, union_link, object_id, integer).
attribute(6, union_link, is_inferred, bool).
attribute(7, union_link, combinator, string).
