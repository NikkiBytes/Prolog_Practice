/* -*- Mode: Prolog -*- */

:- module(pathway_writer_gaf,
          [
           ]).

:- use_module(bio(metadata_db)).
:- use_module(bio(pathway_db)).
:- use_module(bio(interaction_db)).
:- use_module(bio(curation_db)).
:- use_module(bio(bioprolog_util)).
:- use_module(bio(index_util)).
:- [adhoc_reactome].            % TODO

:- dynamic written/2.

io:redirect_stdout(pathway_gaf).
        
io:write_all(pathway_gaf,_,_) :-
        materialize_index(subpathway_ofRT(1,0)),
        materialize_index(has_partRT(1,0)),
        write_header(pathway_gaf),
        write_gaf_lines.
        
write_header(pathway_gaf) :-
        format('! autogenerated~n').

write_gaf_lines :-
        event_participant_role(E_1,Snap_1,R),
        subpathway_ofRT(E_1,E),
	event_goxref(E,GO_ID),
        has_part_or_subtypeRT(Snap_1,Snap),
        snapshot_continuant(Snap,C),
        entity_db_id(C,'UniProt',UniProt_ID),
        entity_label(Snap,Gene),
        \+ written(UniProt_ID,GO_ID),
        Vals=['UniProtKB',
              UniProt_ID,
              Gene,
              R,
              GO_ID,
              E_1, % eg PMID
              'EXP',
              '',
              '', % aspect
              '',
              '',
              protein,
              'taxon:9606',
              'REACTOME',
              '',
              ''],
        atom_codes(Tab,"\t"),
        concat_atom(Vals,Tab,Line),
        write(Line),
        nl,
        assert(written(UniProt_ID,GO_ID)),
        fail.
write_gaf_lines.


        
