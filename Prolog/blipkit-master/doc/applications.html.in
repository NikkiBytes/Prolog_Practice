  <page>
    <title>Blip: Applications</title>
    <section id="Applications">
      <p>
        This page lists some applications using blip
      </p>
    </section>
    <section id="blip kit">
      <p>
        This is a command-line interface to much of the blip module
        functionality, accessed via the unix command
        <pre>blip</pre>, followed by the name of the blip command.
      </p>
      <p>
        Here is the blip help output. You can also get help on a
        specific command by typing <pre>blip -h COMMAND</pre>
<code><pre><![CDATA[
unix$ blip -h
Usage: blip <OPTIONS> COMMAND <COMMAND-OPTIONS> <COMMAND-ARGS>
General Options:
-trace
    If set, enters prolog trace mode
-pregoal ATOM, -pre ATOM [*]
    A prolog goal to be satisfied
-debug ATOM [*]
    A debug category, eg "load"
-goal ATOM
    A prolog goal to be satisfied
-format ATOM, -from ATOM, -f ATOM
    Input format, see io module for full list
-i ATOM, -input ATOM [*]
    Input file, format specified by filename suffix or -from
-r ATOM, -resource ATOM [*]
    Input resource, must be defined in bioconf.pro
-v, -verbose
    If set, prints informational messages
-h, -help
    General help, or help on a specific command if specified
-c ATOM, -conf ATOM [*]
    Prolog conf files to be loaded
-u ATOM, -use ATOM [*]
    Name of blip module to be used; eg a bridge module

Options marked [*] can be specified multiple times

Commands:
ontol-validate 
    basic ontology validation
ontol-stats 
    various statistics on one ontology
ontol-coverset 
    given ids, find minimal id(s) that cover this
ontol-subset 
    exports a subset of an ontology
sb-query 
    Basic queries on sb entities: by species, component, reaction ID
sb-query-by-annot 
    As sb-query; id or name is for a class in some ontology used to annotate s/c/r
sb-summarize 
    Summarise a sb_db file or dataset (try running on a SBML file)
go-show-minset 
    Summarise gene products in go_assoc file by minimal cover set
go-list-assocs 
    Show gene associations by a GO class or similar
prolog 
    query blip resources via prolog shell
config 
    Setup a user's bioconf.pro file in ~/.blip/
io-convert 
    converts from one format to another: see io module
io-diff 
    compares two files at the prolog fact level


Examples:
 blip -r go ontol-coverset [list of GO IDs]
]]>
</pre></code>        
      </p>
      <p>
        The blip script is extendable - just add your own blipkit
        module. See exististing blipkit_* modules in the source
        download for details.
      </p>
    </section>

    <section id="AmiGO-NG">
      <p>
        This is a prototype and reference implementation for the next
        generation of the <a
        href="http://amigo.geneontology.org">AmiGO</a> Gene Ontology
        browser. The current AmiGO is written in object oriented perl
        and template toolkit, querying a MySQL database. The data
        model is fairly rigid, making it hard to explore new
        implementation ideas such as OWL-style ontologies,
        combinatorial annotations and other kinds of instance data
        beside GO association files. AmiGO-NG may not ever be the
        public interface for GO or <url to="OBO"/>, but it is
        currently proving very useful as a rapid prototying tool for
        demoing new ideas, and will serve as a reference
        implementation for the final production version.
      </p>
      <p>
        AmiGO-NG is written using <moduleref to="serval"/>. The core
        model provides generic queries over classes and
        instances. Different plugins allow different data models
        (which may be views over the instance data) and different user
        interfaces.
      </p>
      </section>
      <section id="OBO Browser">
        <p>
          <ul>
            <li>
              <a href="http://berkeleybop.org/obo">OBO Browser</a>
            </li>
          </ul>
        </p>
      </section>

      <section id="OBO-Conv">
        <p>
          <ul>
            <li>
              <a href="http://berkeleybop.org/obo-conv.cgi">OBO Browser</a>
            </li>
          </ul>
        </p>
      </section>

    <section id="Obol">
      <p>
        Obol used blip, in particular, the same predicates as defined in
        <moduleref to="ontol_db"/> - Obol may at some point be converted
        to SWI-Prolog and blip.
      </p>
      <p>
        See the <a href="http://www.berkeleybop.org/obol/">Obol</a>
        page for details
      </p>
    </section>

    <lastmod>
      <!-- Created: Mon May  2 09:02:21 PDT 2005 -->
<!-- hhmts start -->
Last modified: Thu Aug 25 14:58:29 PDT 2005
<!-- hhmts end -->
    </lastmod>

  </page>
